apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: curator
  namespace: <NAMESPACE>
  labels:
    app: curator
    role: loging
spec:
  schedule: "*/5 * * * *"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 3
  concurrencyPolicy: Forbid
  startingDeadlineSeconds: 120
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - image: eu.gcr.io/gardener-project/gardener/curator-es:0.6.0
            name: curator
            args:
            - --config
            - /etc/config/config.yml
            - /etc/config/action_file.yml
            volumeMounts:
            - name: config
              mountPath: /etc/config
            resources:
              limits:
                cpu: 10m
                memory: 50Mi
              requests:
                cpu: 10m
                memory: 30Mi
          volumes:
          - name: config
            configMap:
              name: curator-config
          restartPolicy: OnFailure
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: curator-config
  namespace: <NAMESPACE>
  labels:
    app: curator
    role: loging
data:
  action_file.yml: |-
    # Remember, leave a key empty if there is no value.  None will be a string,
    # not a Python "NoneType"
    #
    # Also remember that all examples have 'disable_action' set to True.  If you
    # want to use this action as a template, be sure to set this to False after
    # copying it.
    actions:
      1:
        action: delete_indices
        description: "Clean up ES by deleting old indices"
        options:
          timeout_override:
          continue_if_exception: False
          disable_action: False
          ignore_empty_list: True
        filters:
        - filtertype: age
          source: name
          direction: older
          timestring: '%Y.%m.%d'
          unit: months
          unit_count: 1
          field:
          stats_result:
          epoch:
          exclude: False
      2:
        action: delete_indices
        description: "Clean up ES by deleting some indices by space"
        filters:
        - filtertype: space
          disk_space: 5
          reverse: True
        options:
          timeout_override:
          continue_if_exception: False
          disable_action: False
          ignore_empty_list: True
      3: 
        action: index_settings
        description: >-
          Set Logstash indices older than 10 days to be read only (block writes)
        options:
          index_settings:
            index:
              blocks:
                read_only_allow_delete: null
              number_of_replicas: 0
              refresh_interval: 60s
              translog:
                durability: async
          ignore_unavailable: False
          preserve_existing: False
          continue_if_exception: True
        filters:
          - filtertype: none
      4:
        action: forcemerge
        description: >-
          Perform a forceMerge on selected indices to 'max_num_segments' per shard
        options:
          max_num_segments: 1
          timeout_override: 21600
          delay: 120
          continue_if_exception: True
        filters:
          - filtertype: forcemerged
            max_num_segments: 1
            exclude: True

  config.yml: |-
    # Remember, leave a key empty if there is no value.  None will be a string,
    # not a Python "NoneType"
    client:
      hosts:
        - elasticsearch-logging.<NAMESPACE>.svc
      port: 9200
      url_prefix:
      use_ssl: False
      certificate:
      client_cert:
      client_key:
      ssl_no_validate: False
      http_auth:
      timeout: 30
      master_only: False
    logging:
      loglevel: INFO
      logfile:
      logformat: default
      blacklist: ['elasticsearch', 'urllib3']