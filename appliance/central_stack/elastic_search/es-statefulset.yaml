apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: elasticsearch-logging
    role: logging
  name: elasticsearch-logging
  namespace: garden
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: elasticsearch-logging
      role: logging
  serviceName: elasticsearch-logging
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: elasticsearch-logging
        role: logging
    spec:
      containers:
      - image: eu.gcr.io/gardener-project/gardener/elasticsearch-oss:0.5.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: transport
          timeoutSeconds: 1
        name: elasticsearch-logging
        ports:
        - containerPort: 9200
          name: http
          protocol: TCP
        - containerPort: 9300
          name: transport
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /_cluster/health
            port: http
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            cpu: "1"
            memory: 3000Mi
          requests:
            cpu: 900m
            memory: 3000Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /data
          name: elasticsearch-logging
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - sh
        - -c
        - if [ $(sysctl -n vm.max_map_count) -lt 262144 ]; then sysctl -w vm.max_map_count=262144;
          fi
        image: alpine:3.6
        imagePullPolicy: IfNotPresent
        name: elasticsearch-logging-init
        resources: {}
        securityContext:
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: elasticsearch-logging
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      creationTimestamp: null
      name: elasticsearch-logging
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 8Gi
    status:
      phase: Pending
#bitnami/elasticsearch:6-ol-7-master
